{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"url",
				"urlencode"
			],
			[
				"backg",
				"background-color"
			],
			[
				"cur",
				"cursor"
			],
			[
				"text-a",
				"text-align"
			],
			[
				"rarit",
				"rarityStr"
			],
			[
				"foilAvail",
				"foilAvailShift"
			],
			[
				"json",
				"json_encode"
			],
			[
				"getCard",
				"getCardDataSet"
			],
			[
				"foilP",
				"foilPrice"
			],
			[
				"label",
				"labels"
			],
			[
				"normalstock",
				"normalStockCtx"
			],
			[
				"normalPri",
				"normalPriceCtx"
			],
			[
				"foilStockC",
				"foilStockCtx"
			],
			[
				"foilPrice",
				"foilPriceCtx"
			],
			[
				"normalPric",
				"normalPriceCtx"
			],
			[
				"normalS",
				"normalStockCanvas"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"jsn_",
				"json_encode"
			],
			[
				"getDm",
				"getDmgsPerShot"
			],
			[
				"combat",
				"combatlogWrapper"
			],
			[
				"var",
				"varIcons"
			],
			[
				"reinfr",
				"reinforceTurn"
			],
			[
				"in",
				"inline-block"
			],
			[
				"offse",
				"offsetY"
			],
			[
				"isDe",
				"isDestroyedThisTurn"
			],
			[
				"setSub",
				"setSubSystemState"
			],
			[
				"getBoo",
				"getBoostEffect"
			],
			[
				"animateU",
				"animateunitExplos"
			],
			[
				"setLa",
				"setlastPosCC"
			],
			[
				"button",
				"buttonTD"
			],
			[
				"getCrew",
				"getCrewLevel"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"getBoost",
				"getBoostEffect"
			],
			[
				"shie",
				"shieldDmg"
			],
			[
				"getRem",
				"getRemEP"
			],
			[
				"em",
				"emDmg"
			],
			[
				"baseHit",
				"baseHitChance"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"preloadf",
				"preLoadFighters"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"primary",
				"primaryTable"
			],
			[
				"getUn",
				"getUnusedPower"
			],
			[
				"getPl",
				"getPlannedFacing"
			],
			[
				"getShor",
				"getShortenTurnCost"
			],
			[
				"getEf",
				"getEffectiveEP"
			],
			[
				"getRemaining",
				"getRemainingEP"
			],
			[
				"test",
				"testForCrits"
			],
			[
				"getArc",
				"getArcDir"
			],
			[
				"delet",
				"deleteAllReinforcements"
			],
			[
				"new",
				"newTarget"
			],
			[
				"ne",
				"newTarget"
			],
			[
				"instruct",
				"instructWrapper"
			],
			[
				"setUnit",
				"setUnitStatus"
			],
			[
				"handelJum",
				"handleJumpOutActions"
			],
			[
				"jum",
				"jumpOut"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"conc",
				"concat"
			],
			[
				"getSy",
				"getSystemByName"
			],
			[
				"createMove",
				"createMoveStartEntries"
			],
			[
				"ships",
				"shipsBought"
			],
			[
				"back",
				"background-color"
			],
			[
				"roa",
				"rotate270"
			],
			[
				"inte",
				"integrity"
			],
			[
				"an",
				"animating"
			],
			[
				"baseI",
				"baseImpulse"
			],
			[
				"hidei",
				"hideInfoDiv"
			],
			[
				"int",
				"integrity"
			],
			[
				"remaining",
				"remainingIntegrity"
			],
			[
				"rem",
				"remainingNegation"
			],
			[
				"remainig",
				"remainingNegation"
			],
			[
				"bonus",
				"bonusNegation"
			],
			[
				"reinforc",
				"reinforceFaction"
			],
			[
				"prev",
				"preventDefault"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"armour",
				"armourElement"
			],
			[
				"getSystem",
				"getSystemById"
			],
			[
				"update",
				"updateShipPower"
			],
			[
				"Squ",
				"Squadron"
			],
			[
				"high",
				"highlightAllSelectedWeapons"
			],
			[
				"prri",
				"primary"
			],
			[
				"create",
				"createElement"
			],
			[
				"rien",
				"reinforce"
			],
			[
				"ammo",
				"ammoId"
			],
			[
				"getLock",
				"getLockEffect"
			],
			[
				"heavy",
				"UltraHeavy"
			],
			[
				"offs",
				"offsetX"
			],
			[
				"getMiss",
				"getMissionTypeString"
			],
			[
				"setPreM",
				"setPreMoveImage"
			],
			[
				"getPowe",
				"getPowerReqString"
			],
			[
				"getPowerR",
				"getPowerReqString"
			],
			[
				"getPower",
				"getPowerReq"
			],
			[
				"hand",
				"handleMouseDown"
			],
			[
				"asse",
				"assemblDeployStates"
			],
			[
				"func_",
				"func_get_args"
			],
			[
				"fun",
				"func_get_args"
			],
			[
				"rein",
				"reinforcements"
			],
			[
				"isnert",
				"insertReinforcements"
			],
			[
				"players",
				"playerstatus"
			],
			[
				"tot",
				"totalOdds"
			],
			[
				"getPlann",
				"getPlannedFacing"
			],
			[
				"setPatrol",
				"setPatrolLayout"
			],
			[
				"setPat",
				"setPatrolImage"
			],
			[
				"bon",
				"bonusNegation"
			],
			[
				"getStructure",
				"getStructureById"
			],
			[
				"doF",
				"doOffset"
			],
			[
				"setPre",
				"setPreMoveCC"
			],
			[
				"getPla",
				"getPlannedPos"
			],
			[
				"setPr",
				"setPreMoveCC"
			],
			[
				"set",
				"setPostFireImage"
			],
			[
				"integr",
				"integrityAmount"
			],
			[
				"remoe",
				"removeClass"
			],
			[
				"z",
				"z-index"
			],
			[
				"getUnit",
				"getUnitPosition"
			],
			[
				"highl",
				"highlightFireOrder"
			],
			[
				"getUnitBy",
				"getUnitByClick"
			],
			[
				"getUnitB",
				"getUnitByClick"
			],
			[
				"extra",
				"extraPulses"
			],
			[
				"proto",
				"prototype"
			],
			[
				"mission",
				"missionSwitch"
			],
			[
				"resetMov",
				"resetMoveTranslation"
			],
			[
				"setMove",
				"setMoveTranslation"
			],
			[
				"prj",
				"projSpeed"
			],
			[
				"getPlan",
				"getPlannedFacing"
			],
			[
				"getImp",
				"getImpulseChangeCost"
			],
			[
				"butt",
				"buttonTD"
			],
			[
				"el",
				"elapsed"
			],
			[
				"dr",
				"drawTrajectory"
			],
			[
				"assemble",
				"assembleBallistics"
			]
		]
	},
	"buffers":
	[
		{
			"file": "crawl.php",
			"settings":
			{
				"buffer_size": 9897,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2210,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shakers.php",
			"settings":
			{
				"buffer_size": 2462,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\n\nini_set('display_errors', 1);\nini_set('display_startup_errors', 1);\nerror_reporting(E_ALL);\n\n\n\nfunction getCardDataSet($name, $data){\n\tfor ($i = 0; $i < sizeof($data); $i++){\n\t\tif ($data[$i][\"name\"] == $name){\n\t\t\treturn $data[$i];\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction addCardDataPoint(&$currentSet, $point){\n\t//echo \"</br>adding point</br>\";\n\t//var_export($point);\n\t//echo \"</br>\";\n\n\tif (!isset($point[\"basePrice\"])){$point[\"basePrice\"] = 0;}//echo $point[\"name\"];}\n\tif (!isset($point[\"foilPrice\"])){$point[\"foilPrice\"] = 0;}//echo $point[\"name\"];}\n\t$currentSet[\"baseAvail\"][] = $point[\"baseAvail\"];\n\t$currentSet[\"basePrice\"][] = $point[\"basePrice\"];\n\t$currentSet[\"foilAvail\"][] = $point[\"foilAvail\"];\n\t$currentSet[\"foilPrice\"][] = $point[\"foilPrice\"];\n\n\t//echo \"</br>current set</br>\";\n\t//var_Export($currentSet);\n}\n\n\nfunction getMemory(){\n\t$size = memory_get_usage(true);\n    $unit = array('b','kb','mb','gb','tb','pb');\n    echo (@round($size/pow(1024,($i=floor(log($size,1024)))),2).' '.$unit[$i]).\"</br>\";\n}\n\t\nfunction buildFullCardPool(){\n\t$sets = file_get_contents(__DIR__.\"/input/sets.json\");\n\t$sets = json_decode($sets);\n\n\t$data = array();\n\n\tfor ($i = 0; $i < sizeof($sets->codes); $i++){\n\t\tfor ($j = 0; $j < sizeof($sets->codes[$i]); $j++){\n\t\t\techo \"adding set: \".$sets->codes[$i][$j].\"\\n\";\n\t\t\t$json = json_decode(file_get_contents(__DIR__.\"/input/\".$sets->codes[$i][$j].\".json\"));\n\n\t\t\t$set = array(\"code\" => $json->code, \"name\" => $json->name, \"cards\" => array());\n\t\t\tforeach ($json->cards as $card){\n\t\t\t\t$set[\"cards\"][] = array(\"name\" => $card->name, \"rarity\" => $card->rarity);\n\t\t\t}\n\t\t\t$data[] = $set;\n\t\t}\n\t}\n\n\t$file = fopen(__DIR__.\"/output/cardlist.json\", \"r\");\n\tfseek($file, 0);\n\tfwrite($file, json_encode($data));\n\tfclose($file);\n}\n\n\n\nfunction getSetNamesByCodes($data){\n\t$sets = json_decode(file_get_contents(__DIR__.\"/input/sets.json\"), TRUE);\n\n\t//var_export($data);\n\t//return;\n\n\t//echo \"s: \".sizeof($data);\n\n\t$codes = $sets[\"codes\"];\n\t$names = $sets[\"names\"];\n\t$return = array();\n\n\tfor ($i = 0; $i < sizeof($data); $i++){\n\t\tfor ($j = 0; $j < sizeof($codes); $j++){\n\t\t\tfor ($k = 0; $k < sizeof($codes[$j]); $k++){\n\t\t\t\tif ($data[$i] == $codes[$j][$k]){\n\t\t\t\t\t$return[] = $names[$j][$k]; break 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n\nfunction getForm($get){\n\t//var_export($get);\n\t$html = \"\";\n\n\t$html .=\"<form method='get'>\";\n\n\t$sets = json_decode(file_get_contents(__DIR__.\"/input/sets.json\"), TRUE);\n\t$codes = $sets[\"codes\"];\n\t$names = $sets[\"codes\"];\n\n\t$rarityStr = array(\"Common\", \"Uncommon\", \"Rare\", \"Mythic Rare\", \"Special\");\n\t$rarity = array(\"C\", \"U\", \"R\", \"M\", \"S\");\n\t$preset = array('', '', \"checked='checked'\", \"checked='checked'\", \"checked='checked'\");\n\n\t$html .=\"<div class='checkWrapper'>\";\n\t$html .=\"<div id='rarity' class='toggle'>Rarities to include (right-click, toggle all)</div>\";\n\n\n\tif (sizeof($get) && $get[\"rarities\"]){\n\t\tfor ($i = 0; $i < sizeof($rarity); $i++){\n\t\t\t$checked = '';\n\t\t\tfor ($j = 0; $j < sizeof($get[\"rarities\"]); $j++){\n\t\t\t\tif ($get[\"rarities\"][$j] == $rarity[$i]){\n\t\t\t\t\t$checked = \"checked='checked'\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$html .=\"<div class='checkContainer'>\";\n\t\t\t$html .=\"<input type='checkbox' name='rarities[]' value='\".$rarity[$i].\"' \".$checked.\">\";\n\t\t\t$html .=\"<span>\".$rarityStr[$i].\"</br>\";\n\t\t\t$html .=\"</div>\";\n\t\t}\n\t}\n\telse {\n\t\tfor ($i = 0; $i < sizeof($rarity); $i++){\n\t\t\t$html .=\"<div class='checkContainer'>\";\n\t\t\t$html .=\"<input type='checkbox' name='rarities[]' value='\".$rarity[$i].\"' \".$preset[$i].\">\";\n\t\t\t$html .=\"<span>\".$rarityStr[$i].\"</br>\";\n\t\t\t$html .=\"</div>\";\n\t\t} \n\t}\n\t$html .=\"</div>\"; \n\n\t$foilChecked = \"\";\n\t$nonFoilChecked = \"\";\n\tif (sizeof($get)){\n\t\tif ($get[\"foil\"] == \"Foil\"){$foilChecked = \"checked='checked'\";}\n\t\telse if ($get[\"foil\"] == \"Non Foil\"){$nonFoilChecked = \"checked='checked'\";}\n\t}\n\telse {\n\t\t$foilChecked = \"checked='checked'\";\n\t}\n\n\t$html .=\"<div class='checkWrapper'>\";\n\t$html .=\"<div class='checkContainer'><input type='radio' name='foil' value='Foil'\".$foilChecked.\"'>Foil</div>\";\n\t$html .=\"<div class='checkContainer'><input type='radio' name='foil' value='Non Foil'\".$nonFoilChecked.\"'>Non Foil</div>\";\n\t//$html .= \"</div>\";\n\n\t//$html .=\"<div class='checkWrapper'>\";\n\n\t$depth = 1;\n\tif (sizeof($get)){$depth = $get[\"depth\"];}\n\t$html .=\"<div class='inputContainer'>\";\n\t$html .=\"<div id='depth'>DAYS</div>\";\n\t$html .=\"<div class=''>\";\n\t$html .= \"<input type='number' min='1' max='50' value='\".$depth.\"' name='depth'>\";\n\t$html .= \"</div>\";\n\t$html .= \"</div>\";\n\n\t$minPrice = 3;\n\tif (sizeof($get)){$minPrice = $get[\"minPrice\"];}\n\t$html .=\"<div class='inputContainer'>\";\n\t$html .=\"<div id='minPrice'>Min € (now)</div>\";\n\t$html .=\"<div class=''>\";\n\t$html .= \"<input type='number' min='0' max='5000' value='\".$minPrice.\"' name='minPrice'>\";\n\t$html .= \"</div>\";\n\t$html .= \"</div>\";\n\n\t$maxPrice = 100;\n\tif (sizeof($get)){$maxPrice = $get[\"maxPrice\"];}\n\t$html .=\"<div class='inputContainer'>\";\n\t$html .=\"<div id='maxPrice'>Max € (now)</div>\";\n\t$html .=\"<div class=''>\";\n\t$html .= \"<input type='number'min='0' max='5000' value='\".$maxPrice.\"' name='maxPrice'>\";\n\t$html .= \"</div>\";\n\t$html .= \"</div>\";\n\n\t$availChange = -3;\n\tif (sizeof($get)){$availChange = $get[\"availChange\"];}\n\t$html .=\"<div class='inputContainer'>\";\n\t$html .=\"<div id='availChange'>Supply Change</div>\";\n\t$html .=\"<div class=''>\";\n\t$html .= \"<input type='number'min='-100' max='100' value='\".$availChange.\"' name='availChange'>\";\n\t$html .= \"</div>\";\n\t$html .= \"</div>\";\n\n\n\t$pctChecked = \"\";\n\t$absChecked = \"\";\n\tif (sizeof($get)){\n\t\tif ($get[\"compareType\"] == \"PCT\"){$pctChecked = \"checked='checked'\";}\n\t\telse if ($get[\"compareType\"] == \"ABS\"){$absChecked = \"checked='checked'\";}\n\t}\n\telse {\n\t\t$pctChecked = \"checked='checked'\"; \n\t}\n\n\t$html .=\"<div class='inputContainer'>\";\n\t$html .=\"<div class='checkContainer'><input type='radio' name='compareType' value='PCT'\".$pctChecked.\"'>%-based</div>\";\n\t$html .=\"<div class='checkContainer'><input type='radio' name='compareType' value='ABS'\".$absChecked.\"'>abs-based</div>\";\n\t$html .= \"</div>\";\n\n\n\n\t$html .= \"</div>\";\n\n\t$html .=\"<div class='checkWrapper'>\";\n\t$html .=\"<div id='set' class='toggle'>Sets to include (right-click, toggle all)</div>\";\n\tfor ($i = 0; $i < sizeof($codes); $i++){\n\t\tfor ($j = 0; $j < sizeof($codes[$i]); $j++){\n\n\t\t\t$checked = '';\n\t\t\tif (sizeof($get) && $get[\"sets\"]){\n\t\t\t\tfor ($k = 0; $k < sizeof($get[\"sets\"]); $k++){\n\t\t\t\t\tif ($get[\"sets\"][$k] == $codes[$i][$j]){\n\t\t\t\t\t\t$checked = \"checked='checked'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$html .=\"<div class='checkContainer'><input type='checkbox' name='sets[]' value='\".$codes[$i][$j].\"' \".$checked.\">\";\n\t\t\t$html .=\"<span>\".$codes[$i][$j].\"</span>\";\n\t\t\t$html .=\"</div>\";\n\t\t}\n\t\t//$html .=\"</br>\";\n\t}\n\n\t$html .=\"</div>\";\n\t$html .=\"</br>\";\n\t$html .=\"<input type='submit' style='width: 200px; font-size: 26px' value='Search'></input>\";\n\t$html .=\"</form>\";\n\n\treturn $html;\n}\n\n\n\nfunction requestShakers($codes, $includes, $foil, $depth, $minPrice, $maxPrice, $availChange, $compareType){\n\t$sets = json_decode(file_get_contents(__DIR__.\"/input/sets.json\"), TRUE);\n\n\t$names = getSetNamesByCodes($codes);\n\n\t/*\n\t$depth = 10;\n\t$foil = 1;\n\t$minPrice = 0.5;\n\t$maxPrice = 0;\n\t$availChange = -0.0;\n\t$includes = array(\"C\", \"R\", \"M\", \"S\");\n\t$compareType = \"pct\";\n\t*/\n\n\t$html = \"\";\n\n\t/*\n\t$html .=\"Delving: \".$depth.\" days of data, \";\n\t$html .=\"only \".$foil.\"</br>\";\n\t$html .=\"Price NOW > \".$minPrice.\", \";\n\t$html .=\"Price NOW < \".$maxPrice.\"</br>\";\n\t$html .=\"Supply Avail Change > \".$availChange.\" (type: \".$compareType.\")</br>\";\n\t*/\n\t$allSets = array();\n\n\t//$codes = array(array(\"A25\"));\n\n\tfor ($i = 0; $i < sizeof($codes); $i++){\n\t\t//for ($j = 0; $j < sizeof($codes[$i]); $j++){\n\t\t//for ($i = 0; $i < 1; $i++){\n\t\t//\tfor ($j = 0; $j < 1; $j++){\n\t\t\t$setName = $names[$i];\n\n\n\t\t\t//$html .=\"Preparing \".$setName.\" prices</br>\";\n\n\n\t\t\t$cards = json_decode(file_get_contents(__DIR__.\"/input/\".$codes[$i].\".json\"), TRUE)[\"cards\"];\n\t\t\t$points = json_decode(file_get_contents(__DIR__.\"/output/\".$codes[$i].\".json\"), TRUE)[\"content\"];\n\t\t\tif (!$points){$html .=\"</br></br>No data found for:\".$setName; continue;}\n\t\t\t$extract = array(\n\t\t\t\t\"set\" => $setName,\n\t\t\t\t\"code\" => $codes[$i],\n\t\t\t\t\"compareDate\" => $points[max(0, (sizeof($points)-1 -$depth))][\"date\"],\n\t\t\t\t\"lastDate\" => $points[sizeof($points)-1][\"date\"],\n\t\t\t\t\"shakers\" => array()\n\t\t\t);\n\n\t\t\tfor ($k = 0; $k < sizeof($cards); $k++){\n\n\t\t\t\t$skip = true;\n\t\t\t\tfor ($l = 0; $l < sizeof($includes); $l++){\n\t\t\t\t\tif ($cards[$k][\"rarity\"][0] == $includes[$l]){$skip = false; break;}\n\t\t\t\t}\n\n\t\t\t\tif ($skip){continue;}\n\n\t\t\t\t$name = $cards[$k][\"name\"];\n\t\t\t\t$last = getCardDataSet($name, $points[sizeof($points)-1][\"data\"]);\n\t\t\t\tif (!$last){continue;}\n\t\t\t\tif ($minPrice != 0 && $last[\"foilPrice\"] < $minPrice){continue;}\n\t\t\t\tif ($maxPrice != 0 && $last[\"foilPrice\"] > $maxPrice){continue;}\n\t\t\t\t$card = array(\n\t\t\t\t\t\"name\" => $name,\n\t\t\t\t\t\"rarity\" => $cards[$k][\"rarity\"],\n\t\t\t\t\t\"baseAvail\" => array(),\n\t\t\t\t\t\"basePrice\" => array(),\n\t\t\t\t\t\"foilAvail\" => array(),\n\t\t\t\t\t\"foilPrice\" => array(),\n\t\t\t\t\t\"baseAvailChange\" => array(),\n\t\t\t\t\t\"basePriceChange\" => array(),\n\t\t\t\t\t\"foilAvailChange\" => array(),\n\t\t\t\t\t\"foilPriceChange\" => array()\n\t\t\t\t);\n\n\n\t\t\t\tfor ($l = sizeof($points)-1; $l >= max(0, (sizeof($points)-1 -$depth)); $l--){\n\t\t\t\t\taddCardDataPoint($card, getCardDataSet($name, $points[$l][\"data\"]));\n\t\t\t\t}\n\t\t\t\t$extract[\"shakers\"][] = $card;\n\t\t\t}\n\n\t\t\tif (!sizeof($extract[\"shakers\"])){continue;}\n\t\t\t$allSets[] = $extract;\n\t\t//}\n\t}\n\n\n\tfor ($i = 0; $i < sizeof($allSets); $i++){\n\t\tfor ($j = 0; $j < sizeof($allSets[$i][\"shakers\"]); $j++){\n\t\t\tsetChangeValue($allSets[$i][\"shakers\"][$j], \"baseAvail\");\n\t\t\tsetChangeValue($allSets[$i][\"shakers\"][$j], \"basePrice\");\n\t\t\tsetChangeValue($allSets[$i][\"shakers\"][$j], \"foilAvail\");\n\t\t\tsetChangeValue($allSets[$i][\"shakers\"][$j], \"foilPrice\");\n\t\t}\n\t}\n\t\n\techo $html;\n\techo buildTables($allSets, $foil, $compareType, $availChange, $minPrice);\n\n}\n\n\nfunction setChangeValue(&$card, $attr){\n\tif ($card[$attr][sizeof($card[$attr])-1] == 0){$card[$attr.\"Change\"][0] = 0; $card[$attr.\"Change\"][1] = 0; return;}\n\t//var_export($card);\n\t$card[$attr.\"Change\"][0] = round($card[$attr][0] - $card[$attr][sizeof($card[$attr])-1], 2); \n\t$card[$attr.\"Change\"][1] = round((($card[$attr][0] / $card[$attr][sizeof($card[$attr])-1])*100)-100, 2); \n}\n\n\nfunction buildTables($allSets, $foil, $compareType, $availChange, $minPrice){\n\n\t//echo $availChange;\n\t/*var_export(func_get_arg(1));\n\t\t\techo \"</br></br>\";\n\tvar_export(func_get_arg(2));\n\t\t\techo \"</br></br>\";\n\tvar_export(func_get_arg(3));\n\t\t\techo \"</br></br>\";\n\tvar_export(func_get_arg(4));\n\t\t\techo \"</br></br>\";\n\t*/\n\t$avail = \"\";\n\t$change = \"\";\n\t$price = \"\";\n\t$html = \"<span style='color: red'>NOTE: Prefer the # (available stock) columns, price is biased because of 'cheap' foreign foils</span>\";\n\t$html .= \"</br>\";\n\t$index;\n\n\tif ($foil == \"Non Foil\"){\n\t\t$avail = \"baseAvail\";\n\t\t$price = \"basePrice\";\n\t\t$volChange = \"baseAvailChange\";\n\t\t$moneyChange = \"basePriceChange\";\n\t}\n\telse {\n\t\t$avail = \"foilAvail\";\n\t\t$price = \"foilPrice\";\n\t\t$volChange = \"foilAvailChange\";\n\t\t$moneyChange = \"foilPriceChange\";\n\t}\n\n\tif ($compareType == \"abs\"){\n\t\t$index = 0;\n\t} else $index = 1;\n\n\n\tfor ($i = 0; $i < sizeof($allSets); $i++){\n\t\t//$html .=\"entries: \".sizeof($allSets[$i][\"shakers\"]).\"</br>\";\n\t\t$html .=\"<table class='moveTable'>\";\n\n\n\t\t$html .=\"<thead>\";\n\t\t$html .=\"<tr><th class='set' colSpan=10>\".$allSets[$i][\"set\"].\" - \".$allSets[$i][\"code\"].\"</th></tr>\";\n\t\t$html .=\"<tr class='sort'>\";\n\t\t$html .=\"<th style='width: 180px'>Name</th>\";\n\t\t$html .=\"<th style='width: 100px'>Rarity</th>\";\n\n\t\t$html .=\"<th style='width: 100px'>#</br>\".$allSets[$i][\"compareDate\"].\"</th>\";\n\t\t$html .=\"<th style='width: 100px'>#</br>\".$allSets[$i][\"lastDate\"].\"</th>\";\n\t\t$html .=\"<th style='width: 70px'>ABS</th>\";\n\t\t$html .=\"<th style='width: 70px'>PCT</th>\";\n\n\t\t$html .=\"<th style='width: 100px'>€</br>\".$allSets[$i][\"compareDate\"].\"</th>\";\n\t\t$html .=\"<th style='width: 100px'>€</br>\".$allSets[$i][\"lastDate\"].\"</th>\";\n\t\t$html .=\"<th style='width: 70px'>ABS</th>\";\n\t\t$html .=\"<th style='width: 70px'>PCT</th>\";\n\t\t$html .=\"</tr></thead>\";\n\n\t\t$html .=\"<tbody>\";\n\n\t\tfor ($j = 0; $j < sizeof($allSets[$i][\"shakers\"]); $j++){\n\t\t\t$card = $allSets[$i][\"shakers\"][$j];\n\n\t\t\tif ($minPrice != 0 && $card[$price][0] <= $minPrice){continue;}\n\t\t\tif ($availChange != 0 && $card[$volChange][$index] > $availChange){continue;}\n\n\t\t\t$href = \"index.php?type=preset&set=\".urlencode($allSets[$i][\"set\"]).\"&card=\".urlencode($card[\"name\"]);\n\n\t\t\t$html .=\"<tr><td><a target='blank' href=\".$href.\">\".$card['name'].\"</a></td>\";\n\t\t\t$html .=\"<td>\".$card[\"rarity\"].\"</td>\";\n\n\t\t\t$html .=\"<td>\".$card[$avail][sizeof($card[$avail])-1].\"</td>\";\n\t\t\t$html .=\"<td>\".$card[$avail][0].\"</td>\";\n\t\t\tif ($card[$volChange][0] > 0){$class = \"green\";} else $class =\"red\";\n\t\t\t$html .=\"<td class='\".$class.\"'>\".$card[$volChange][0].\"</td>\";\n\t\t\t$html .=\"<td class='\".$class.\"'>\".$card[$volChange][1].\" %</td>\";\n\n\t\t\t$html .=\"<td>\".$card[$price][sizeof($card[$price])-1].\"</td>\";\n\t\t\t$html .=\"<td>\".$card[$price][0].\"</td>\";\n\t\t\tif ($card[$moneyChange][0] > 0){$class = \"green\";} else $class =\"red\";\n\t\t\t$html .=\"<td class='\".$class.\"'>\".$card[$moneyChange][0].\"</td>\";\n\t\t\t$html .=\"<td class='\".$class.\"'>\".$card[$moneyChange][1].\" %</td>\";\n\t\t\t$html .=\"</tr>\";\n\t\t}\n\n\t\t$html .=\"</tbody></table>\";\n\n\t}\n\treturn $html;\n}\n\nfunction fixOutputSets(){\n\t$sets = json_decode(file_get_contents(__DIR__.\"/input/sets.json\"), TRUE);\n\t$codes = $sets[\"codes\"];\n\t$names = $sets[\"names\"];\n\n\t//for ($i = 0; $i < 1; $i++){\n\t//\tfor ($j = 0; $j < 1; $j++){\n\tfor ($i = 0; $i < sizeof($codes); $i++){\n\t\tfor ($j = 0; $j < sizeof($codes[$i]); $j++){\n\n\t\t\techo \"doing set: \".$names[$i][$j].\"</br>\";\n\t\t\t$errorA = 0;\n\t\t\t$errorB = 0;\n\t\t\t$errorC = 0;\n\t\t\t$errorD = 0;\n\n\t\t\t$file = fopen(__DIR__.\"/output/\" . $codes[$i][$j] .\".json\", \"r+\");\n\t\t\tfseek($file, 0);\n\n\t\t\tfwrite($file, '{\"code\": \"'.$codes[$i][$j].'\",');\n\t\t\tfwrite($file, \"\\n\");\n\t\t\tfwrite($file, '\"content\": [');\n\t\t\tfwrite($file, \"\\n\");\n\n\t\t\t//fclose($file);\n\t\t\t//$file = fopen(__DIR__.\"/output/\" . $codes[$i][$j] .\".json\", \"a\");\n\n\t\t\t$data = json_decode(file_get_contents(__DIR__.\"/output/\".$codes[$i][$j].\".json\"), TRUE);\n\n\t\t\tfor ($k = 0; $k < sizeof($data[\"content\"]); $k++){\n\t\t\t\tfor ($l = 0; $l < sizeof($data[\"content\"][$k][\"data\"]); $l++){\n\n\t\t\t\t\t$data[\"content\"][$k][\"code\"] = $codes[$i][$j];\n\n\t\t\t\t\tif (!isset($data[\"content\"][$k][\"data\"][$l][\"baseAvail\"])){$data[\"content\"][$k][\"data\"][$l][\"baseAvail\"] = 0;$errorA++;}\n\t\t\t\t\tif (!isset($data[\"content\"][$k][\"data\"][$l][\"basePrice\"])){$data[\"content\"][$k][\"data\"][$l][\"basePrice\"] = 0;$errorB++;}\n\t\t\t\t\tif (!isset($data[\"content\"][$k][\"data\"][$l][\"foilAvail\"])){$data[\"content\"][$k][\"data\"][$l][\"foilAvail\"] = 0;$errorC++;}\n\t\t\t\t\tif (!isset($data[\"content\"][$k][\"data\"][$l][\"foilPrice\"])){$data[\"content\"][$k][\"data\"][$l][\"foilPrice\"] = 0;$errorD++;}\n\t\t\t\t}\n\n\t\t\t\tfwrite($file, json_encode($data[\"content\"][$k]));\n\t\t\t\tfwrite($file, \"\\n\");\n\n\t\t\t\tif ($k < sizeof($data[\"content\"])-1){\n\t\t\t\t\tfwrite($file, \",\");\n\t\t\t\t} else fwrite($file, \"]}\");\n\t\t\t}\n\n\t\t\techo \"found errors: \".$errorA.\"/\".$errorB.\"/\".$errorC.\"/\".$errorD.\"</br>\";\n\t\t\tfclose($file);\n\t\t}\n\t}\n}\n\n\n?>",
			"file": "global.php",
			"file_size": 15580,
			"file_write_time": 131675232981793974,
			"settings":
			{
				"buffer_size": 15076,
				"line_ending": "Windows"
			}
		},
		{
			"file": "style/style.css",
			"settings":
			{
				"buffer_size": 1657,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style/datatables.min.css",
			"settings":
			{
				"buffer_size": 14338,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 9446,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "input/sets.json",
			"settings":
			{
				"buffer_size": 700,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "input/LEB.json",
			"settings":
			{
				"buffer_size": 204761,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "output/cardlist.json",
			"settings":
			{
				"buffer_size": 269709,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "output/SOM.json",
			"settings":
			{
				"buffer_size": 71463,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 104.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/crawl/input/SOM.json",
		"/C/xampp/htdocs/crawl/script.js",
		"/C/xampp/htdocs/crawl/output/cardlist.json",
		"/C/xampp/htdocs/crawl/input/sets.json",
		"/C/xampp/htdocs/crawl/input/A25.json",
		"/C/xampp/htdocs/crawl/output/A25.json",
		"/C/xampp/htdocs/crawl/output/7ED.json",
		"/C/xampp/htdocs/crawl/output/KTK.json",
		"/C/xampp/htdocs/crawl/output/LEB.json",
		"/C/xampp/htdocs/crawl/output/LEG.json",
		"/C/xampp/htdocs/crawl/output/MBS.json",
		"/C/xampp/htdocs/crawl/output/MIR.json",
		"/C/xampp/htdocs/crawl/output/VIS.json",
		"/C/xampp/htdocs/crawl/output/TMP.json",
		"/C/xampp/htdocs/crawl/output/MPS.json",
		"/C/xampp/htdocs/crawl/output/MPS_AKH.json",
		"/C/xampp/htdocs/crawl/output/NPH.json",
		"/C/xampp/htdocs/crawl/output/EXP.json",
		"/C/xampp/htdocs/crawl/output/STH.json",
		"/C/xampp/htdocs/crawl/output/DTK.json",
		"/C/xampp/htdocs/crawl/output/EMA.json",
		"/C/xampp/htdocs/crawl/output/FRF.json",
		"/C/xampp/htdocs/crawl/output/KLD.json",
		"/C/xampp/htdocs/crawl/output/AER.json",
		"/C/xampp/htdocs/crawl/output/HOU.json",
		"/C/xampp/htdocs/crawl/output/XLN.json",
		"/C/xampp/htdocs/crawl/output/AKH.json",
		"/C/xampp/htdocs/crawl/output/RIX.json",
		"/C/xampp/htdocs/crawl/output/SOM.json",
		"/C/xampp/htdocs/crawl/style/style.css",
		"/C/xampp/htdocs/crawl/libs/style.css",
		"/C/xampp/htdocs/crawl/writeCardList.php",
		"/C/xampp/htdocs/crawl/input/VIS.json",
		"/C/xampp/htdocs/crawl/input/XLN.json",
		"/C/xampp/htdocs/crawl/input/7ED.json",
		"/C/xampp/htdocs/crawl/input/RIX.json",
		"/C/xampp/htdocs/crawl/A25.json",
		"/C/xampp/htdocs/crawl/use.php",
		"/C/xampp/htdocs/crawl/output.json",
		"/C/xampp/php/crawler/AER.json",
		"/C/xampp/php/crawler/log.csv",
		"/C/xampp/htdocs/crawler/A25.json",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/plasma.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/pulse.php",
		"/C/xampp/htdocs/fire/server/squaddie.php",
		"/C/xampp/htdocs/fire/server/squadron.php",
		"/C/xampp/htdocs/fire/server/mixed.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
		"/C/xampp/htdocs/fire/index.php",
		"/C/xampp/htdocs/fire/getGameData.php",
		"/C/xampp/htdocs/fire/postGameData.php",
		"/C/xampp/htdocs/fire/server/fighter.php",
		"/C/xampp/htdocs/fire/server/systems/structure.php",
		"/C/xampp/htdocs/fire/ajax.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/salvo.js",
		"/C/xampp/htdocs/fire/flights.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/linked.php",
		"/C/xampp/htdocs/fire/server/ships/haven.php",
		"/C/xampp/htdocs/fire/server/ships/crius.php",
		"/C/xampp/htdocs/fire/server/ships/mograth.php",
		"/C/xampp/htdocs/fire/server/ships/gsten.php",
		"/C/xampp/htdocs/fire/server/ships/trakk.php",
		"/C/xampp/htdocs/fire/server/ships/thentus.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/server/ships/altarian.php",
		"/C/xampp/htdocs/fire/server/ships/darkner.php",
		"/C/xampp/htdocs/fire/server/ships/vorchar.php",
		"/C/xampp/htdocs/fire/server/ships/vorchan.php",
		"/C/xampp/htdocs/fire/server/systems/single.php",
		"/C/xampp/htdocs/fire/server/ships/primus.php",
		"/C/xampp/htdocs/fire/server/ships/Octurion.php",
		"/C/xampp/htdocs/fire/server/ships/gquan.php",
		"/C/xampp/htdocs/fire/server/classes.php",
		"/C/xampp/htdocs/fire/server/dmgCalc.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/mixed.js",
		"/C/xampp/htdocs/fire/server/ships/hermes.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/gameSetup.php",
		"/C/xampp/htdocs/fire/game.php",
		"/C/xampp/htdocs/fire/server/ships/rongoth.php",
		"/C/xampp/htdocs/fire/server/ships/shokov.php",
		"/C/xampp/htdocs/fire/server/ships/shokos.php",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/game.js",
		"/C/xampp/htdocs/fire/cam.js",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/classes.js",
		"/C/xampp/htdocs/fire/server/ships/centurion.php",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/server/ships/omega.php",
		"/C/xampp/htdocs/fire/mathLib.js",
		"/C/xampp/htdocs/fire/squadron.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/systems/system.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/em.php",
		"/C/xampp/htdocs/fire/server/ships/tech.php",
		"/C/xampp/htdocs/fire/server/ships/tigara.php",
		"/C/xampp/htdocs/fire/server/ships/torotha.php",
		"/C/xampp/htdocs/fire/autoload.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/server/systems/weapon.php",
		"/C/xampp/htdocs/fire/global.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/server/ships/katoc.php",
		"/C/xampp/htdocs/fire/server/squadbuilder.php",
		"/C/xampp/htdocs/fire/server/debug.php",
		"/C/xampp/htdocs/fire/endGame.php",
		"/C/xampp/htdocs/fire/fire.log",
		"/C/xampp/htdocs/fire/lobby.php",
		"/C/xampp/htdocs/fire/server/systems/nonweapon.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/dual.php",
		"/C/xampp/htdocs/fire/server/ships/dagkar.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/area.php",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/server/ships/battlecrab.php",
		"/C/xampp/htdocs/fire/server/ships/olympus.php",
		"/C/xampp/htdocs/fire/server/ships/artemis.php",
		"/C/xampp/htdocs/fire/server/ships/saggitarius.php"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 121.0,
		"where_history":
		[
			"",
			"shakers.php",
			"",
			"script.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"*,js",
			"\t\t\t",
			"\t",
			"",
			"squadron.js",
			"sqaudron.js",
			"mixed.js",
			"",
			"mixed.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"*-php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"\t\t\t",
			"\t\t",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"(graph",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"*,js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"squadron.php",
			"",
			"squadron.js",
			"squadron.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.js",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"*.js",
			"*.ks",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"limited e",
			"var_",
			"var_export($c",
			"echo t",
			"echo co",
			"brah",
			"please s",
			"compareType",
			"getForm",
			"type",
			"$type",
			"requestShakers",
			"radio",
			"include",
			"include\"",
			"include",
			"availChange",
			"supplyChange",
			"getForm",
			"buildTables",
			"rarit",
			"days",
			"$j",
			"wrapper",
			"checking",
			"check",
			"checking",
			"check",
			"checking",
			"checking ",
			"days",
			"20px",
			"sets",
			"\"",
			"buildTables",
			"setChangeValue",
			"nihil",
			"baseprice",
			"$type",
			"minPrice",
			">;\"",
			"search",
			"#111",
			"e.dataTable thead th:active,table.dataTable thead td:active{outline:none}table.dataTable tfoot th,table.dataTable tfoot td{padding:10px 18px 6px 18px;",
			"18px;border-bottom:1px solid #111}table.da",
			"border-bottom:1px solid #111",
			"border-bottom: 1px solid #111",
			"dataTable thead t",
			"30px",
			"padding",
			"30",
			"padding:10px 18px",
			"fffff",
			"#ffffff;",
			" #ffffff;",
			"background-color: #ffffff;",
			"    background-color: #ffffff;",
			"code",
			"print",
			"echo ",
			"foilAvailShift",
			"foilPriceMin",
			"strip mine",
			"Shift",
			"masters 25",
			"set",
			"howling mine",
			"baseavail",
			"\n",
			"baseprice",
			"basepric",
			"content",
			"rds[$j][\"name\"].\", \".$ca",
			"ds[$j][\"name\"]",
			"$get",
			"echo $get",
			"get",
			"sizeof($car",
			"echo",
			"getStandSets",
			"getnonfoi",
			"getNonFoilSets",
			"getStandSets",
			"aet",
			"175",
			"dtanda",
			"getStandSets",
			"rish",
			"risha",
			"anvil",
			"getFullNonFoilSets",
			"getFullNonFoilSets,",
			"$priceTR = $table->children(2)",
			"getStandSets",
			"getCardDataSets",
			"buildChart",
			"label",
			"buildBothCharts",
			"new En",
			"Entry",
			"getCardDataSets",
			"getTickData",
			"tickData",
			"foilStock",
			"stockPrice",
			"stockStock",
			"new Entry",
			"getLabel",
			"foilPriceChart",
			"getFoilPriceData",
			"foil price",
			"data.",
			"getFoilPriceData",
			"getLabel",
			"buildBothCharts",
			"getFoilPriceData",
			"getBasePrice",
			"getPriceDataSets",
			"normalStock",
			"normalPrice",
			"graph",
			"getPriceDataSets",
			"getBasePrice",
			"getPriceDataSets",
			"buildChart",
			"build",
			"},\n,{\"",
			", "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"availChange",
			"$k",
			"'",
			"$compareType",
			"extract",
			"$html .=",
			"Change",
			"buildAllChards",
			"foilAvail",
			"basePrice",
			"baseAvail",
			"points.",
			"stockStock",
			"stockPrice",
			"getStandSets",
			"game.ui.logWrapper",
			"JSON",
			"getLogTitleSpan",
			"\" + this.getFullLogTitleSpan() + \"",
			"\" + this.getFullLogTitleSpan + \"",
			"this.getFullLogTitleSpan",
			"$i",
			"launch",
			"\",\n\t\t\t\t\t\"units\" => array(),\n\t\t\t\t\t\"loads\" =>",
			"\"amount\" =>",
			"\"amount\"",
			"verifyFleetCost",
			"public static $value = ",
			".doDraw)",
			".doDraw = ",
			"$emitter",
			"$tPos",
			"$target",
			"$origin->",
			"$origin",
			"this.",
			"div",
			"addSysEvents",
			"addMainDivEvents",
			"$cost",
			"public static $value",
			"public $cost",
			"public $cost = ",
			"myGames",
			"getRemNegation",
			"remNegation",
			"remNeg",
			"addDamage($dmg);",
			"->addDamage($dmg, $gameturn)",
			"armour.style",
			"GSten",
			"Debug::open()",
			"Debug::close();",
			"Vran",
			"animateUnitExplos",
			"$trigger",
			" + this.getLogNameEntry() + \" </fo",
			"div",
			"ParticleTorpedo",
			"TorpedoLauncher",
			"PTorpLauncher",
			"getBoostOutput",
			"weaponDiv",
			"hangarDiv",
			"switchWeaponDiv",
			"switchHangarDiv",
			"showHangarDiv",
			"getRemIntegrity",
			"getOverkillSystem",
			"$fire->weapon",
			"getCurPos",
			"getCurFacing",
			"getIncomingFireAngle",
			"initUnit",
			"checkUnitOffsetting",
			"anim",
			"drawVectorUI",
			"Ballistic",
			"setupWeaponLoadout",
			"MissileLauncher",
			"BallisticLauncher ",
			"MissileLauncher",
			"BallisticLauncher",
			"Muon",
			"getUnitExploDetails",
			"eCritTest($tur",
			">singleCritTest($tu",
			"$this->structures[$i]->damages",
			"$j",
			"singleCritTest",
			"handleCritTesting",
			"Fusion",
			"checkDropoutCrits($new, $old, $turn){",
			"ction checkSystemCrits($turn $new, $old){",
			"determineCrit($new, $old,",
			"vitalHP",
			"updateUnitStats",
			"writeDestroyedStatus",
			"doSecondDestroyedCheck",
			"doFirstDestroyedCheck",
			"checkPrimaryDestroyedState",
			"$this->checkDestroyedState();",
			"updateUnitStats",
			"325",
			"this.fireMode == \"Pulse\"",
			"this.fireMode == \"Laser\"",
			"this.dmgType == \"Matter\"",
			"this.dmgType == \"Plasma\"",
			"drawUnitExplo",
			"evenly spread over",
			"slipAngle = 15",
			"unitExplo",
			"setCurSpeed",
			" \"SitaraPlasma\"),",
			" \"SitaraIon\"),",
			"> \"Sitara (Ion)\",",
			"\"Sitara (Ion)\"),",
			"\"Sitara (Ion)\"",
			"\"Sitara (Ion\")",
			"ParticleGun",
			"NeutronRepeater",
			"0, 150]",
			"getCurSpeed",
			"getRemAmmo",
			"getRemSpeed",
			"getRemEP",
			"getRemDelay",
			"getRemSpeed"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "crawl.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9897,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2210,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "shakers.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2462,
						"regions":
						{
						},
						"selection":
						[
							[
								1635,
								1635
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15076,
						"regions":
						{
						},
						"selection":
						[
							[
								262,
								262
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "style/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1657,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "style/datatables.min.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14338,
						"regions":
						{
						},
						"selection":
						[
							[
								14338,
								14338
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15076,
						"regions":
						{
						},
						"selection":
						[
							[
								2255,
								2255
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 632.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9446,
						"regions":
						{
						},
						"selection":
						[
							[
								113,
								113
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "input/sets.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 700,
						"regions":
						{
						},
						"selection":
						[
							[
								54,
								54
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "input/LEB.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 204761,
						"regions":
						{
						},
						"selection":
						[
							[
								121,
								121
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "output/cardlist.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 269709,
						"regions":
						{
						},
						"selection":
						[
							[
								37483,
								37483
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 299864.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "output/SOM.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 71463,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 5322.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.39818520796,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 94.0
	},
	"pinned_build_system": "",
	"project": "crawl.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"shak",
				"C:\\xampp\\htdocs\\crawl\\shakers.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\crawl\\style\\style.css"
			],
			[
				"glob",
				"C:\\xampp\\htdocs\\crawl\\global.php"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\crawl\\script.js"
			],
			[
				"ind",
				"C:\\xampp\\htdocs\\crawl\\index.php"
			],
			[
				"inde",
				"C:\\xampp\\htdocs\\crawl\\index.php"
			],
			[
				"g",
				"C:\\xampp\\htdocs\\crawl\\global.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\crawl\\style\\style.css"
			],
			[
				"glo",
				"C:\\xampp\\htdocs\\crawl\\global.php"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\crawl\\style\\style.css"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\crawl\\style\\style.css"
			],
			[
				"shake",
				"C:\\xampp\\htdocs\\crawl\\shakers.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\crawl\\global.php"
			],
			[
				"glb",
				"C:\\xampp\\htdocs\\crawl\\global.php"
			],
			[
				"som",
				"C:\\xampp\\htdocs\\crawl\\output\\SOM.json"
			],
			[
				"ema",
				"C:\\xampp\\htdocs\\crawl\\output\\EMA.json"
			],
			[
				"np",
				"C:\\xampp\\htdocs\\crawl\\output\\NPH.json"
			],
			[
				"mb",
				"C:\\xampp\\htdocs\\crawl\\output\\MBS.json"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\crawl\\output\\STH.json"
			],
			[
				"leb",
				"C:\\xampp\\htdocs\\crawl\\output\\LEB.json"
			],
			[
				"7",
				"C:\\xampp\\htdocs\\crawl\\output\\7ED.json"
			],
			[
				"ri",
				"C:\\xampp\\htdocs\\crawl\\output\\RIX.json"
			],
			[
				"leg",
				"C:\\xampp\\htdocs\\crawl\\output\\LEG.json"
			],
			[
				"exp",
				"C:\\xampp\\htdocs\\crawl\\output\\EXP.json"
			],
			[
				"sets",
				"C:\\xampp\\htdocs\\crawl\\input\\sets.json"
			],
			[
				"5",
				"C:\\xampp\\htdocs\\crawl\\output\\A25.json"
			],
			[
				"cra",
				"C:\\xampp\\htdocs\\crawl\\crawl.php"
			],
			[
				"mps",
				"C:\\xampp\\htdocs\\crawl\\output\\MPS.json"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\crawl\\shakers.php"
			],
			[
				"set",
				"C:\\xampp\\htdocs\\crawl\\input\\sets.json"
			],
			[
				"7ed",
				"C:\\xampp\\htdocs\\crawl\\output\\7ED.json"
			],
			[
				"xp",
				"C:\\xampp\\htdocs\\crawl\\output\\EXP.json"
			],
			[
				"a25",
				"C:\\xampp\\htdocs\\crawl\\output\\A25.json"
			],
			[
				"a2",
				"C:\\xampp\\htdocs\\crawl\\output\\A25.json"
			],
			[
				"crw",
				"C:\\xampp\\htdocs\\crawl\\crawl.php"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\crawl\\output\\VIS.json"
			],
			[
				"vis",
				"C:\\xampp\\htdocs\\crawl\\output\\VIS.json"
			],
			[
				"mir",
				"C:\\xampp\\htdocs\\crawl\\output\\MIR.json"
			],
			[
				"mp",
				"C:\\xampp\\htdocs\\crawl\\output\\TMP.json"
			],
			[
				"ktk",
				"C:\\xampp\\htdocs\\crawl\\output\\KTK.json"
			],
			[
				"nd",
				"C:\\xampp\\htdocs\\crawl\\index.php"
			],
			[
				"i",
				"C:\\xampp\\htdocs\\crawl\\index.php"
			],
			[
				"in",
				"C:\\xampp\\htdocs\\crawl\\index.php"
			],
			[
				"get",
				"C:\\xampp\\htdocs\\crawl\\get.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"sq",
				"C:\\xampp\\htdocs\\fire\\squadron.js"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sj",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"trakk",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\trakk.php"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"gq",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gquan.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\system.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\fire.log"
			],
			[
				"dmg",
				"C:\\xampp\\htdocs\\fire\\server\\dmgCalc.php"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"gst",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gsten.php"
			],
			[
				"dag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\dagkar.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"lauc",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"ammo",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"cen",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\centurion.php"
			],
			[
				"shok",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\shokov.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"wea",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"sho",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\shokov.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"cent",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\centurion.php"
			],
			[
				"tig",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tigara.php"
			],
			[
				"ti",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"mog",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\mograth.php"
			],
			[
				"oct",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\Octurion.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"gs",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gsten.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"cl",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"c",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"dmcg",
				"C:\\xampp\\htdocs\\fire\\server\\dmgCalc.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\fire.log"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"squad",
				"C:\\xampp\\htdocs\\fire\\server\\squaddie.php"
			],
			[
				"kat",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\katoc.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"ron",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\rongoth.php"
			],
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"oc",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\Octurion.php"
			],
			[
				"rong",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\rongoth.php"
			],
			[
				"gste",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gsten.php"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"herm",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hermes.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"pulse",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"ro",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\rongoth.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 173.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
